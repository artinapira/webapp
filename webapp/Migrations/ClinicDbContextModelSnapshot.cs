// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapp.Models;

#nullable disable

namespace webapp.Migrations
{
    [DbContext(typeof(ClinicDbContext))]
    partial class ClinicDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KnowledgePartner", b =>
                {
                    b.Property<int>("PartnerId")
                        .HasColumnType("int")
                        .HasColumnName("PartnerID");

                    b.Property<int>("KnowledgeId")
                        .HasColumnType("int")
                        .HasColumnName("KnowledgeID");

                    b.HasKey("PartnerId", "KnowledgeId")
                        .HasName("PK__Knowledg__B60FECB4181C76A5");

                    b.HasIndex("KnowledgeId");

                    b.ToTable("Knowledge_Partners", (string)null);
                });

            modelBuilder.Entity("MarketingSherbime", b =>
                {
                    b.Property<int>("SherbimiId")
                        .HasColumnType("int")
                        .HasColumnName("SherbimiID");

                    b.Property<int>("MarketingId")
                        .HasColumnType("int")
                        .HasColumnName("MarketingID");

                    b.HasKey("SherbimiId", "MarketingId")
                        .HasName("PK__Marketin__56E7F35D4AD19DE1");

                    b.HasIndex("MarketingId");

                    b.ToTable("Marketing_Sherbime", (string)null);
                });

            modelBuilder.Entity("StafiInventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .HasColumnType("int")
                        .HasColumnName("InventoryID");

                    b.Property<int>("StafiId")
                        .HasColumnType("int")
                        .HasColumnName("StafiID");

                    b.HasKey("InventoryId", "StafiId")
                        .HasName("PK__Stafi_In__EC8444EC5675982D");

                    b.HasIndex("StafiId");

                    b.ToTable("Stafi_Inventory", (string)null);
                });

            modelBuilder.Entity("StafiKnowledge", b =>
                {
                    b.Property<int>("StafiId")
                        .HasColumnType("int")
                        .HasColumnName("StafiID");

                    b.Property<int>("KnowledgeId")
                        .HasColumnType("int")
                        .HasColumnName("KnowledgeID");

                    b.HasKey("StafiId", "KnowledgeId")
                        .HasName("PK__Stafi_Kn__1868AC76B8CF93CC");

                    b.HasIndex("KnowledgeId");

                    b.ToTable("Stafi_Knowledge", (string)null);
                });

            modelBuilder.Entity("StafiMarketing", b =>
                {
                    b.Property<int>("StafiId")
                        .HasColumnType("int")
                        .HasColumnName("StafiID");

                    b.Property<int>("MarketingId")
                        .HasColumnType("int")
                        .HasColumnName("MarketingID");

                    b.HasKey("StafiId", "MarketingId")
                        .HasName("PK__Stafi_Ma__7356C6540A58D2C4");

                    b.HasIndex("MarketingId");

                    b.ToTable("Stafi_Marketing", (string)null);
                });

            modelBuilder.Entity("TerapiaMedicalRecord", b =>
                {
                    b.Property<int>("TerapiaId")
                        .HasColumnType("int")
                        .HasColumnName("TerapiaID");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.HasKey("TerapiaId", "RecordId")
                        .HasName("PK__Terapia___CB452A4B2683290B");

                    b.HasIndex("RecordId");

                    b.ToTable("Terapia_MedicalRecord", (string)null);
                });

            modelBuilder.Entity("TerapiaPrescription", b =>
                {
                    b.Property<int>("TerapiaId")
                        .HasColumnType("int")
                        .HasColumnName("TerapiaID");

                    b.Property<int>("PrescriptionId")
                        .HasColumnType("int")
                        .HasColumnName("PrescriptionID");

                    b.HasKey("TerapiaId", "PrescriptionId")
                        .HasName("PK__Terapia___70F9ED46EF5B7246");

                    b.HasIndex("PrescriptionId");

                    b.ToTable("Terapia_Prescription", (string)null);
                });

            modelBuilder.Entity("webapp.Models.Ankesat", b =>
                {
                    b.Property<int>("AnkesaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AnkesaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnkesaId"));

                    b.Property<string>("Ankesa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PacientiId")
                        .HasColumnType("int")
                        .HasColumnName("PacientiID");

                    b.Property<int>("StafiId")
                        .HasColumnType("int")
                        .HasColumnName("StafiID");

                    b.HasKey("AnkesaId")
                        .HasName("PK__Ankesat__932170085DBF0B35");

                    b.HasIndex("PacientiId");

                    b.HasIndex("StafiId");

                    b.ToTable("Ankesat", (string)null);
                });

            modelBuilder.Entity("webapp.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Pershkrimi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("DepartmentId")
                        .HasName("PK__Departme__B2079BCD553C1E5A");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("webapp.Models.Inventory", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ItemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ItemId")
                        .HasName("PK__Inventor__727E83EB5E10EEBC");

                    b.ToTable("Inventory", (string)null);
                });

            modelBuilder.Entity("webapp.Models.Knowledge", b =>
                {
                    b.Property<int>("KnowledgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KnowledgeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KnowledgeId"));

                    b.Property<string>("Pershkrimi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("KnowledgeId")
                        .HasName("PK__Knowledg__FF28F869B79B5A2E");

                    b.ToTable("Knowledge", (string)null);
                });

            modelBuilder.Entity("webapp.Models.Marketing", b =>
                {
                    b.Property<int>("MarketingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MarketingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarketingId"));

                    b.Property<byte[]>("Img")
                        .HasColumnType("image");

                    b.Property<string>("Pershkrimi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("MarketingId")
                        .HasName("PK__Marketin__4CCE5A4F57292385");

                    b.ToTable("Marketing", (string)null);
                });

            modelBuilder.Entity("webapp.Models.MedicalRecord", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<string>("Diagnoza")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PacientiId")
                        .HasColumnType("int")
                        .HasColumnName("PacientiID");

                    b.Property<string>("Pershkrimi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Rezultati")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Simptomat")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("RecordId")
                        .HasName("PK__MedicalR__FBDF78C979AD22BB");

                    b.HasIndex("PacientiId");

                    b.ToTable("MedicalRecords");
                });

            modelBuilder.Entity("webapp.Models.PacientNote", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NoteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NoteId"));

                    b.Property<int>("PacientiId")
                        .HasColumnType("int")
                        .HasColumnName("PacientiID");

                    b.Property<string>("Pershkrimi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("NoteId")
                        .HasName("PK__PacientN__EACE357F51446B04");

                    b.HasIndex("PacientiId");

                    b.ToTable("PacientNotes");
                });

            modelBuilder.Entity("webapp.Models.Pacienti", b =>
                {
                    b.Property<int>("PacientiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PacientiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PacientiId"));

                    b.Property<DateOnly?>("DataLindjes")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EmriMbiemri")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Gjinia")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("PacientiId")
                        .HasName("PK__Pacienti__924B0339492FDD79");

                    b.ToTable("Pacienti", (string)null);
                });

            modelBuilder.Entity("webapp.Models.Partner", b =>
                {
                    b.Property<int>("PartnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PartnerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartnerId"));

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Pershkrimi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("PartnerId")
                        .HasName("PK__Partners__39FD6332A640B7B5");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("webapp.Models.Prescription", b =>
                {
                    b.Property<int>("PrescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PrescriptionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrescriptionId"));

                    b.Property<string>("Diagnoza")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Medicina")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PacientiId")
                        .HasColumnType("int")
                        .HasColumnName("PacientiID");

                    b.HasKey("PrescriptionId")
                        .HasName("PK__Prescrip__4013081262B37C45");

                    b.HasIndex("PacientiId");

                    b.ToTable("Prescription", (string)null);
                });

            modelBuilder.Entity("webapp.Models.SherbimiShtese", b =>
                {
                    b.Property<int>("SherbimiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SherbimiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SherbimiId"));

                    b.Property<decimal?>("Cmimi")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Pershkrimi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("SherbimiId")
                        .HasName("PK__Sherbimi__B22B16F9C24FBFF2");

                    b.ToTable("SherbimiShtese", (string)null);
                });

            modelBuilder.Entity("webapp.Models.Stafi", b =>
                {
                    b.Property<int>("StafiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StafiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StafiId"));

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("EmriMbiemri")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<TimeOnly?>("Orari")
                        .HasColumnType("time");

                    b.Property<decimal>("Paga")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("StafiId")
                        .HasName("PK__Stafi__979A23F0ED334B91");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Stafi", (string)null);
                });

            modelBuilder.Entity("webapp.Models.Terapium", b =>
                {
                    b.Property<int>("TerapiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TerapiaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TerapiaId"));

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Pershkrimi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("TerapiaId")
                        .HasName("PK__Terapia__44F8DDC7F30F4C97");

                    b.ToTable("Terapia");
                });

            modelBuilder.Entity("webapp.Models.Terminet", b =>
                {
                    b.Property<int>("TerminiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TerminiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TerminiId"));

                    b.Property<string>("Ceshtja")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly?>("DataT")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("Ora")
                        .HasColumnType("time");

                    b.Property<int>("PacientiId")
                        .HasColumnType("int")
                        .HasColumnName("PacientiID");

                    b.Property<int>("StafiId")
                        .HasColumnType("int")
                        .HasColumnName("StafiID");

                    b.HasKey("TerminiId")
                        .HasName("PK__Terminet__BDD5CEF0B2E0417E");

                    b.HasIndex("PacientiId");

                    b.HasIndex("StafiId");

                    b.ToTable("Terminet", (string)null);
                });

            modelBuilder.Entity("webapp.Models.Vlersimet", b =>
                {
                    b.Property<int>("VlersimiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VlersimiID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VlersimiId"));

                    b.Property<int>("PacientiId")
                        .HasColumnType("int")
                        .HasColumnName("PacientiID");

                    b.Property<int>("Sherbimi")
                        .HasColumnType("int");

                    b.Property<int>("Sjellja")
                        .HasColumnType("int");

                    b.Property<int>("StafiId")
                        .HasColumnType("int")
                        .HasColumnName("StafiID");

                    b.HasKey("VlersimiId")
                        .HasName("PK__Vlersime__49DCD2F5F2CA39E9");

                    b.HasIndex("PacientiId");

                    b.HasIndex("StafiId");

                    b.ToTable("Vlersimet", (string)null);
                });

            modelBuilder.Entity("KnowledgePartner", b =>
                {
                    b.HasOne("webapp.Models.Knowledge", null)
                        .WithMany()
                        .HasForeignKey("KnowledgeId")
                        .IsRequired()
                        .HasConstraintName("FK__Knowledge__Knowl__6C190EBB");

                    b.HasOne("webapp.Models.Partner", null)
                        .WithMany()
                        .HasForeignKey("PartnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Knowledge__Partn__6B24EA82");
                });

            modelBuilder.Entity("MarketingSherbime", b =>
                {
                    b.HasOne("webapp.Models.Marketing", null)
                        .WithMany()
                        .HasForeignKey("MarketingId")
                        .IsRequired()
                        .HasConstraintName("FK__Marketing__Marke__778AC167");

                    b.HasOne("webapp.Models.SherbimiShtese", null)
                        .WithMany()
                        .HasForeignKey("SherbimiId")
                        .IsRequired()
                        .HasConstraintName("FK__Marketing__Sherb__76969D2E");
                });

            modelBuilder.Entity("StafiInventory", b =>
                {
                    b.HasOne("webapp.Models.Inventory", null)
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Stafi_Inv__Inven__4D94879B");

                    b.HasOne("webapp.Models.Stafi", null)
                        .WithMany()
                        .HasForeignKey("StafiId")
                        .IsRequired()
                        .HasConstraintName("FK__Stafi_Inv__Stafi__4E88ABD4");
                });

            modelBuilder.Entity("StafiKnowledge", b =>
                {
                    b.HasOne("webapp.Models.Knowledge", null)
                        .WithMany()
                        .HasForeignKey("KnowledgeId")
                        .IsRequired()
                        .HasConstraintName("FK__Stafi_Kno__Knowl__66603565");

                    b.HasOne("webapp.Models.Stafi", null)
                        .WithMany()
                        .HasForeignKey("StafiId")
                        .IsRequired()
                        .HasConstraintName("FK__Stafi_Kno__Stafi__656C112C");
                });

            modelBuilder.Entity("StafiMarketing", b =>
                {
                    b.HasOne("webapp.Models.Marketing", null)
                        .WithMany()
                        .HasForeignKey("MarketingId")
                        .IsRequired()
                        .HasConstraintName("FK__Stafi_Mar__Marke__71D1E811");

                    b.HasOne("webapp.Models.Stafi", null)
                        .WithMany()
                        .HasForeignKey("StafiId")
                        .IsRequired()
                        .HasConstraintName("FK__Stafi_Mar__Stafi__70DDC3D8");
                });

            modelBuilder.Entity("TerapiaMedicalRecord", b =>
                {
                    b.HasOne("webapp.Models.MedicalRecord", null)
                        .WithMany()
                        .HasForeignKey("RecordId")
                        .IsRequired()
                        .HasConstraintName("FK__Terapia_M__Recor__59FA5E80");

                    b.HasOne("webapp.Models.Terapium", null)
                        .WithMany()
                        .HasForeignKey("TerapiaId")
                        .IsRequired()
                        .HasConstraintName("FK__Terapia_M__Terap__59063A47");
                });

            modelBuilder.Entity("TerapiaPrescription", b =>
                {
                    b.HasOne("webapp.Models.Prescription", null)
                        .WithMany()
                        .HasForeignKey("PrescriptionId")
                        .IsRequired()
                        .HasConstraintName("FK__Terapia_P__Presc__60A75C0F");

                    b.HasOne("webapp.Models.Terapium", null)
                        .WithMany()
                        .HasForeignKey("TerapiaId")
                        .IsRequired()
                        .HasConstraintName("FK__Terapia_P__Terap__5FB337D6");
                });

            modelBuilder.Entity("webapp.Models.Ankesat", b =>
                {
                    b.HasOne("webapp.Models.Pacienti", "Pacienti")
                        .WithMany("Ankesats")
                        .HasForeignKey("PacientiId")
                        .IsRequired()
                        .HasConstraintName("FK__Ankesat__Pacient__412EB0B6");

                    b.HasOne("webapp.Models.Stafi", "Stafi")
                        .WithMany("Ankesats")
                        .HasForeignKey("StafiId")
                        .IsRequired()
                        .HasConstraintName("FK__Ankesat__StafiID__403A8C7D");

                    b.Navigation("Pacienti");

                    b.Navigation("Stafi");
                });

            modelBuilder.Entity("webapp.Models.MedicalRecord", b =>
                {
                    b.HasOne("webapp.Models.Pacienti", "Pacienti")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("PacientiId")
                        .IsRequired()
                        .HasConstraintName("FK__MedicalRe__Pacie__5629CD9C");

                    b.Navigation("Pacienti");
                });

            modelBuilder.Entity("webapp.Models.PacientNote", b =>
                {
                    b.HasOne("webapp.Models.Pacienti", "Pacienti")
                        .WithMany("PacientNotes")
                        .HasForeignKey("PacientiId")
                        .IsRequired()
                        .HasConstraintName("FK__PacientNo__Pacie__5165187F");

                    b.Navigation("Pacienti");
                });

            modelBuilder.Entity("webapp.Models.Prescription", b =>
                {
                    b.HasOne("webapp.Models.Pacienti", "Pacienti")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PacientiId")
                        .IsRequired()
                        .HasConstraintName("FK__Prescript__Pacie__5CD6CB2B");

                    b.Navigation("Pacienti");
                });

            modelBuilder.Entity("webapp.Models.Stafi", b =>
                {
                    b.HasOne("webapp.Models.Department", "Department")
                        .WithMany("Stafis")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Stafi__Departmen__3D5E1FD2");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("webapp.Models.Terminet", b =>
                {
                    b.HasOne("webapp.Models.Pacienti", "Pacienti")
                        .WithMany("Terminets")
                        .HasForeignKey("PacientiId")
                        .IsRequired()
                        .HasConstraintName("FK__Terminet__Pacien__44FF419A");

                    b.HasOne("webapp.Models.Stafi", "Stafi")
                        .WithMany("Terminets")
                        .HasForeignKey("StafiId")
                        .IsRequired()
                        .HasConstraintName("FK__Terminet__StafiI__440B1D61");

                    b.Navigation("Pacienti");

                    b.Navigation("Stafi");
                });

            modelBuilder.Entity("webapp.Models.Vlersimet", b =>
                {
                    b.HasOne("webapp.Models.Pacienti", "Pacienti")
                        .WithMany("Vlersimets")
                        .HasForeignKey("PacientiId")
                        .IsRequired()
                        .HasConstraintName("FK__Vlersimet__Pacie__48CFD27E");

                    b.HasOne("webapp.Models.Stafi", "Stafi")
                        .WithMany("Vlersimets")
                        .HasForeignKey("StafiId")
                        .IsRequired()
                        .HasConstraintName("FK__Vlersimet__Stafi__47DBAE45");

                    b.Navigation("Pacienti");

                    b.Navigation("Stafi");
                });

            modelBuilder.Entity("webapp.Models.Department", b =>
                {
                    b.Navigation("Stafis");
                });

            modelBuilder.Entity("webapp.Models.Pacienti", b =>
                {
                    b.Navigation("Ankesats");

                    b.Navigation("MedicalRecords");

                    b.Navigation("PacientNotes");

                    b.Navigation("Prescriptions");

                    b.Navigation("Terminets");

                    b.Navigation("Vlersimets");
                });

            modelBuilder.Entity("webapp.Models.Stafi", b =>
                {
                    b.Navigation("Ankesats");

                    b.Navigation("Terminets");

                    b.Navigation("Vlersimets");
                });
#pragma warning restore 612, 618
        }
    }
}
